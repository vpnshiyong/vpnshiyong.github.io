<!doctype html>
<html xml:lang="zh-CN" lang="zh-CN">

<head>
        <link rel="canonical" href="https://vpnshiyong.github.io/news/article-92801.htm" />
    <!-- Required meta tags -->
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width, initial-scale=1, maximum-scale=1, user-scalable=no">
    <title>Spring Boot 新特性一键构建Docker镜像</title>
    <link rel="icon" href="/assets/website/img/v2raynode/favicon.ico" type="image/x-icon"/>
        <meta name="description" content="背景 在我们开发过程中为了支持 Docker 容器化，一般使用 Maven 编译打包然后生成镜像，能够大大提供上线效率，同时能够快速动态扩容，快速回滚，着实很方便。docker-maven-plugi" />
    
    <meta name="author" content="VPN试用 订阅链接节点官网">
    <meta property="og:type" content="article" />
    <meta property="og:url" content="https://vpnshiyong.github.io/news/article-92801.htm" />
    <meta property="og:site_name" content="VPN试用 订阅链接节点官网" />
    <meta property="og:title" content="Spring Boot 新特性一键构建Docker镜像" />
    <meta property="og:image" content="https://vpnshiyong.github.io/uploads/20240303/db5a665284a9da47ce39aad0b162896d.webp" />
        <meta property="og:release_date" content="2025-04-10T08:18:56" />
    <meta property="og:updated_time" content="2025-04-10T08:18:56" />
        <meta property="og:description" content="背景 在我们开发过程中为了支持 Docker 容器化，一般使用 Maven 编译打包然后生成镜像，能够大大提供上线效率，同时能够快速动态扩容，快速回滚，着实很方便。docker-maven-plugi" />
        
    <meta name="applicable-device" content="pc,mobile" />
    <meta name="renderer" content="webkit" />
    <meta name="force-rendering" content="webkit" />
    <meta http-equiv="Cache-Control" content="no-transform" />
    <meta name="robots" content="max-image-preview:large" />
    <meta name="apple-mobile-web-app-capable" content="yes">
    <meta name="apple-mobile-web-app-status-bar-style" content="black">
    <meta name="apple-mobile-web-app-title" content="Spring Boot 新特性一键构建Docker镜像">
    <meta name="format-detection" content="telephone=no">

    <link rel="dns-prefetch" href="https:/www.googletagmanager.com">
    <link rel="dns-prefetch" href="https://www.googleadservices.com">
    <link rel="dns-prefetch" href="https://www.google-analytics.com">
    <link rel="dns-prefetch" href="https://pagead2.googlesyndication.com">
    <link rel="dns-prefetch" href="https://cm.g.doubleclick.net">
    <link rel="dns-prefetch" href="https://fonts.googleapis.com">

    <!-- google-fonts -->
    <link href="https://fonts.googleapis.com/css2?family=Montserrat:wght@100;200;300;400;500;600;700;800;900&display=swap" rel="stylesheet">
    <!-- //google-fonts -->
    <!-- Template CSS Style link -->
    <link rel="stylesheet" href="/assets/website/css/v2raynode/style-starter.css">
    <!-- Google tag (gtag.js) -->
<script async src="https://www.googletagmanager.com/gtag/js?id=G-GE2TTTPE1T"></script>
<script>
  window.dataLayer = window.dataLayer || [];
  function gtag(){dataLayer.push(arguments);}
  gtag('js', new Date());

  gtag('config', 'G-GE2TTTPE1T');
</script>
    <script async src="https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js?client=ca-pub-3332997411212854"
     crossorigin="anonymous"></script>
</head>

<body data-page="detail">
    <!--header-->
    <header id="site-header" class="fixed-top">
        <div class="container-fluid">
            <nav class="navbar navbar-expand-lg stroke">
                <a class="navbar-brand d-flex align-items-center" href="/">
                                    <span>VPN试用</span>
                                </a>

                <button class="navbar-toggler  collapsed bg-gradient" type="button" data-toggle="collapse" data-target="#navbarTogglerDemo02" aria-controls="navbarTogglerDemo02" aria-expanded="false" aria-label="Toggle navigation">
                    <span class="navbar-toggler-icon fa icon-expand fa-bars"></span>
                    <span class="navbar-toggler-icon fa icon-close fa-times"></span>
                </button>
                <div class="collapse navbar-collapse" id="navbarTogglerDemo02">
                    <ul class="navbar-nav ml-lg-auto">
                                                <li class="nav-item">
                            <a class="nav-link" href="/">首页</a>
                        </li>
                                                <li class="nav-item">
                            <a class="nav-link" href="/free-nodes/">免费节点</a>
                        </li>
                                                <li class="nav-item">
                            <a class="nav-link" href="/paid-subscribe/">推荐机场</a>
                        </li>
                                                <li class="nav-item">
                            <a class="nav-link" href="/news/">新闻资讯</a>
                        </li>
                                                <li class="nav-item">
                            <a class="nav-link" href="/client.htm">客户端</a>
                        </li>
                                            </ul>
                </div>
                <!-- toggle switch for light and dark theme -->
                <div class="cont-ser-position">
                    <nav class="navigation">
                        <div class="theme-switch-wrapper">
                            <label class="theme-switch" for="checkbox">
                                <input type="checkbox" id="checkbox">
                                <div class="mode-container">
                                    <i class="gg-sun"></i>
                                    <i class="gg-moon"></i>
                                </div>
                            </label>
                        </div>
                    </nav>
                </div>
                <!-- //toggle switch for light and dark theme -->
            </nav>
        </div>
    </header>
    <!--//header-->
    <!-- inner banner -->
    <div class="inner-banner">
        <section class="w3l-breadcrumb">
            <div class="container">
                <h1 class="inner-text-title font-weight-bold text-white mb-sm-3 mb-2" style="line-height: 3rem;word-break: break-all;">Spring Boot 新特性一键构建Docker镜像</h1>
                <ul class="breadcrumbs-custom-path">
                    <li><a href="/">首页</a></li>
                    <li><span class="fa fa-chevron-right mx-2" aria-hidden="true"></span><a href="/news/">新闻资讯</a></li>
                    <li class="active"><span class="fa fa-chevron-right mx-2" aria-hidden="true"></span>正文</li>
                </ul>
            </div>
        </section>
    </div>
    <!-- //inner banner -->
    <!-- about section -->
    <section class="video-section py-5">
        <div class="container py-md-5 py-4">
            <div class="row">
                <div class="col-md-9">
                                    <input type="hidden" id="share-website-info" data-name="Clash Node官网订阅站" data-url="https://clashnode.github.io">
                  				  				  				<div id="content_views" class="markdown_views prism-atom-one-dark"> <p>背景</p> <p>在我们开发过程中为了支持 Docker 容器化，一般使用 Maven 编译打包然后生成镜像，能够大大提供上线效率，同时能够快速动态扩容，快速回滚，着实很方便。docker-maven-plugin 插件就是为了帮助我们在 Maven 工程中，通过简单的配置，自动生成镜像并推送到仓库中。<br /> spotify 、fabric8<br /> 这里主要使用的主要是如下两种插件 spotify 、fabric8 , … -配置通过 xml 定义出 Dockerfile 或者挂载外部 Dockerfile 通过调用 Docker remote api 构建出镜像<br /> pig 微服务平台[1]所有的容器化都是基于此构建</p> <pre><code class="prism language-java"><span class="token generics function"><span class="token punctuation">&lt;</span>plugin<span class="token punctuation">&gt;</span></span><span class="token generics function"><span class="token punctuation">&lt;</span>groupId<span class="token punctuation">&gt;</span></span>com<span class="token punctuation">.</span>spotify<span class="token operator">&lt;</span><span class="token operator">/</span>groupId<span class="token operator">&gt;</span><span class="token generics function"><span class="token punctuation">&lt;</span>artifactId<span class="token punctuation">&gt;</span></span>docker<span class="token operator">-</span>maven<span class="token operator">-</span>plugin<span class="token operator">&lt;</span><span class="token operator">/</span>artifactId<span class="token operator">&gt;</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token operator">-</span>配置通过 xml 定义出 Dockerfile 或者挂载外部 Dockerfile<span class="token operator">&lt;</span><span class="token operator">/</span>plugin<span class="token operator">&gt;</span><span class="token generics function"><span class="token punctuation">&lt;</span>plugin<span class="token punctuation">&gt;</span></span><span class="token generics function"><span class="token punctuation">&lt;</span>groupId<span class="token punctuation">&gt;</span></span>io<span class="token punctuation">.</span>fabric8<span class="token operator">&lt;</span><span class="token operator">/</span>groupId<span class="token operator">&gt;</span><span class="token generics function"><span class="token punctuation">&lt;</span>artifactId<span class="token punctuation">&gt;</span></span>docker<span class="token operator">-</span>maven<span class="token operator">-</span>plugin<span class="token operator">&lt;</span><span class="token operator">/</span>artifactId<span class="token operator">&gt;</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token operator">-</span>配置通过 xml 定义出 Dockerfile 或者挂载外部 Dockerfile<span class="token operator">&lt;</span><span class="token operator">/</span>plugin<span class="token operator">&gt;</span></code></pre> <p>执行相应的插件周期即可 mvn docker:build &amp;&amp; mvn docker:push<br /> jib<br /> 项目每次发布实际上变更的代码量不大，尤其依赖的 jar 变动的可能性较小，如果使用前两种插件构建镜像，会导致每次都全量构建，会导致存储和带宽资源浪费。<br /> jib 是 Google 于 18 年 7 月发布的一个针对 Java 应用的构建镜像的工具(支持 Maven 和 Gradle) ，好处是能够复用构建缓存，能够加快构建，减小传输体积</p> <pre><code class="prism language-java"><span class="token operator">&lt;</span><span class="token operator">!</span><span class="token operator">--</span>配置通过 xml 定义出 Dockerfile ，本质上和外挂 Dockerfile 并无区别<span class="token operator">--</span><span class="token operator">&gt;</span><span class="token generics function"><span class="token punctuation">&lt;</span>plugin<span class="token punctuation">&gt;</span></span><span class="token generics function"><span class="token punctuation">&lt;</span>groupId<span class="token punctuation">&gt;</span></span>com<span class="token punctuation">.</span>google<span class="token punctuation">.</span>cloud<span class="token punctuation">.</span>tools<span class="token operator">&lt;</span><span class="token operator">/</span>groupId<span class="token operator">&gt;</span><span class="token generics function"><span class="token punctuation">&lt;</span>artifactId<span class="token punctuation">&gt;</span></span>jib<span class="token operator">-</span>maven<span class="token operator">-</span>plugin<span class="token operator">&lt;</span><span class="token operator">/</span>artifactId<span class="token operator">&gt;</span><span class="token operator">&lt;</span><span class="token operator">/</span>plugin<span class="token operator">&gt;</span>  mvn jib<span class="token operator">:</span>dockerBuild</code></pre> <p>以上三种方案的问题<br /> 在实际开发过程中，大部分的 spring boot 项目构建 Dockerfile 都是相同，不需要通过的 XML 或者通过外挂 Dockerfile 来重新定义<br /> 以上插件需要对 Dockerfile 的定义知识有相对的了 对开发并不友好<br /> 没充分理由 Spring Boot 2.3 以后的 Jar 分层技术。<br /> 解决方案</p> <p>Spring Boot 2.4[2] 推出了自己的 docker 构建工具 整合在原有的 spring-boot-maven-plugin 中，只需要配置对应目标仓库和主机信息即可完成镜像构建。<br /><img decoding="async" src="http://img.555519.xyz/uploads3/20220602/653eebb04f1ff195568cd28bf4077cc0.jpg" alt="Spring Boot 新特性一键构建Docker镜像"></p> <p>如下配置即可完成上图中 通过开发机器在不安装 Docker 的同时，通过 192.168.0.10 的 Docker Remote API 完成镜像构建并发布到 192.168.0.20 的镜像仓库</p> <pre><code class="prism language-java"><span class="token generics function"><span class="token punctuation">&lt;</span>plugin<span class="token punctuation">&gt;</span></span><span class="token generics function"><span class="token punctuation">&lt;</span>groupId<span class="token punctuation">&gt;</span></span>org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>boot<span class="token operator">&lt;</span><span class="token operator">/</span>groupId<span class="token operator">&gt;</span><span class="token generics function"><span class="token punctuation">&lt;</span>artifactId<span class="token punctuation">&gt;</span></span>spring<span class="token operator">-</span>boot<span class="token operator">-</span>maven<span class="token operator">-</span>plugin<span class="token operator">&lt;</span><span class="token operator">/</span>artifactId<span class="token operator">&gt;</span><span class="token generics function"><span class="token punctuation">&lt;</span>configuration<span class="token punctuation">&gt;</span></span><span class="token generics function"><span class="token punctuation">&lt;</span>image<span class="token punctuation">&gt;</span></span><span class="token generics function"><span class="token punctuation">&lt;</span>name<span class="token punctuation">&gt;</span></span><span class="token number">192.168</span><span class="token number">.0</span><span class="token number">.20</span><span class="token operator">/</span>pig4cloud<span class="token operator">/</span>$<span class="token punctuation">{<!-- --></span>project<span class="token punctuation">.</span>artifactId<span class="token punctuation">}</span><span class="token operator">&lt;</span><span class="token operator">/</span>name<span class="token operator">&gt;</span><span class="token operator">&lt;</span><span class="token operator">!</span><span class="token operator">--</span> 执行完build 自动push<span class="token operator">--</span><span class="token operator">&gt;</span><span class="token generics function"><span class="token punctuation">&lt;</span>publish<span class="token punctuation">&gt;</span></span><span class="token boolean">true</span><span class="token operator">&lt;</span><span class="token operator">/</span>publish<span class="token operator">&gt;</span><span class="token operator">&lt;</span><span class="token operator">/</span>image<span class="token operator">&gt;</span><span class="token operator">&lt;</span><span class="token operator">!</span><span class="token operator">--</span>配置构建宿主机信息，本机不用配置<span class="token operator">--</span><span class="token operator">&gt;</span><span class="token generics function"><span class="token punctuation">&lt;</span>docker<span class="token punctuation">&gt;</span></span><span class="token generics function"><span class="token punctuation">&lt;</span>host<span class="token punctuation">&gt;</span></span>http<span class="token operator">:</span><span class="token operator">/</span><span class="token operator">/</span><span class="token number">192.168</span><span class="token number">.0</span><span class="token number">.10</span><span class="token operator">:</span><span class="token number">2375</span><span class="token operator">&lt;</span><span class="token operator">/</span>host<span class="token operator">&gt;</span><span class="token generics function"><span class="token punctuation">&lt;</span>tlsVerify<span class="token punctuation">&gt;</span></span><span class="token boolean">false</span><span class="token operator">&lt;</span><span class="token operator">/</span>tlsVerify<span class="token operator">&gt;</span><span class="token generics function"><span class="token punctuation">&lt;</span>publishRegistry<span class="token punctuation">&gt;</span></span><span class="token generics function"><span class="token punctuation">&lt;</span>username<span class="token punctuation">&gt;</span></span>username<span class="token operator">&lt;</span><span class="token operator">/</span>username<span class="token operator">&gt;</span><span class="token generics function"><span class="token punctuation">&lt;</span>password<span class="token punctuation">&gt;</span></span>password<span class="token operator">&lt;</span><span class="token operator">/</span>password<span class="token operator">&gt;</span><span class="token generics function"><span class="token punctuation">&lt;</span>url<span class="token punctuation">&gt;</span></span><span class="token number">192.168</span><span class="token number">.0</span><span class="token number">.20</span><span class="token operator">&lt;</span><span class="token operator">/</span>url<span class="token operator">&gt;</span><span class="token operator">&lt;</span><span class="token operator">/</span>publishRegistry<span class="token operator">&gt;</span><span class="token operator">&lt;</span><span class="token operator">/</span>docker<span class="token operator">&gt;</span><span class="token operator">&lt;</span><span class="token operator">/</span>configuration<span class="token operator">&gt;</span><span class="token operator">&lt;</span><span class="token operator">/</span>plugin<span class="token operator">&gt;</span></code></pre> <p>执行以下命令即可完成 镜像的构建和自动发布</p> <pre><code class="prism language-java">mvn spring<span class="token operator">-</span>boot<span class="token operator">:</span>build<span class="token operator">-</span>image</code></pre> <p>其他说明</p> <p>docker host 配置不生效<br /> 如下图 ① 处配置节点，但是 ② 报错提示 host 不一致<br /><img decoding="async" src="http://img.555519.xyz/uploads3/20220602/5b671c5c9e8facb15fb47efe8f98608b.jpg" alt="Spring Boot 新特性一键构建Docker镜像"></p> <p>检查本地是否配置 $DOCKER_HOST 环境变量，经过阅读源码后发现优先读取此变量。</p> <pre><code class="prism language-java">⋊<span class="token operator">&gt;</span><span class="token operator">~</span> echo $DOCKER_HOST<span class="token number">11</span><span class="token operator">:</span><span class="token number">07</span><span class="token operator">:</span><span class="token number">51</span> tcp<span class="token operator">:</span><span class="token operator">/</span><span class="token operator">/</span><span class="token number">172.17</span><span class="token number">.0</span><span class="token number">.111</span><span class="token operator">:</span><span class="token number">2375</span></code></pre> <p>网络支持<br /> 截取部分构建过程中的日志，如下需要从 github 下载相关的依赖 约 100M ，这个过程大概率会失败。建议通过配置代理或者使用国外 ECS 来解决。</p> <pre><code class="prism language-java"><span class="token operator">:</span><span class="token operator">:</span> Spring Boot<span class="token operator">:</span><span class="token operator">:</span><span class="token punctuation">(</span>v2<span class="token punctuation">.</span><span class="token number">4.0</span><span class="token punctuation">)</span><span class="token punctuation">[</span>INFO<span class="token punctuation">]</span><span class="token operator">&gt;</span> Running creator<span class="token punctuation">[</span>INFO<span class="token punctuation">]</span><span class="token punctuation">[</span>creator<span class="token punctuation">]</span>         Downloading from https<span class="token operator">:</span><span class="token operator">/</span><span class="token operator">/</span>github<span class="token punctuation">.</span>com<span class="token operator">/</span>bell<span class="token operator">-</span>sw<span class="token operator">/</span>Liberica<span class="token operator">/</span>releases<span class="token operator">/</span>download<span class="token operator">/</span><span class="token number">8</span>u275<span class="token operator">+</span><span class="token number">1</span><span class="token operator">/</span>bellsoft<span class="token operator">-</span>jre8u275<span class="token operator">+</span><span class="token number">1</span><span class="token operator">-</span>linux<span class="token operator">-</span>amd64<span class="token punctuation">.</span>tar<span class="token punctuation">.</span>gz<span class="token punctuation">[</span>INFO<span class="token punctuation">]</span><span class="token punctuation">[</span>creator<span class="token punctuation">]</span>       JVMKill Agent<span class="token number">1.16</span><span class="token number">.0</span><span class="token operator">:</span> Contributing to layer<span class="token punctuation">[</span>INFO<span class="token punctuation">]</span><span class="token punctuation">[</span>creator<span class="token punctuation">]</span>         Downloading from https<span class="token operator">:</span><span class="token operator">/</span><span class="token operator">/</span>github<span class="token punctuation">.</span>com<span class="token operator">/</span>cloudfoundry<span class="token operator">/</span>jvmkill<span class="token operator">/</span>releases<span class="token operator">/</span>download<span class="token operator">/</span>v1<span class="token punctuation">.</span><span class="token number">16.0</span><span class="token punctuation">.</span>RELEASE<span class="token operator">/</span>jvmkill<span class="token operator">-</span><span class="token number">1.16</span><span class="token number">.0</span><span class="token operator">-</span>RELEASE<span class="token punctuation">.</span>so<span class="token punctuation">[</span>INFO<span class="token punctuation">]</span><span class="token punctuation">[</span>creator<span class="token punctuation">]</span>         Downloading from https<span class="token operator">:</span><span class="token operator">/</span><span class="token operator">/</span>repo<span class="token punctuation">.</span>spring<span class="token punctuation">.</span>io<span class="token operator">/</span>release<span class="token operator">/</span>org<span class="token operator">/</span>springframework<span class="token operator">/</span>cloud<span class="token operator">/</span>spring<span class="token operator">-</span>cloud<span class="token operator">-</span>bindings<span class="token operator">/</span><span class="token number">1.6</span><span class="token number">.0</span><span class="token operator">/</span>spring<span class="token operator">-</span>cloud<span class="token operator">-</span>bindings<span class="token operator">-</span><span class="token number">1.6</span><span class="token number">.0</span><span class="token punctuation">.</span>jar<span class="token punctuation">[</span>INFO<span class="token punctuation">]</span><span class="token punctuation">[</span>creator<span class="token punctuation">]</span>         Verifying checksum<span class="token punctuation">[</span>INFO<span class="token punctuation">]</span><span class="token punctuation">[</span>creator<span class="token punctuation">]</span><span class="token number">192.168</span><span class="token number">.0</span><span class="token number">.20</span><span class="token operator">/</span>pig4cloud<span class="token operator">/</span>demo<span class="token operator">:</span>latest<span class="token punctuation">[</span>INFO<span class="token punctuation">]</span><span class="token punctuation">[</span>INFO<span class="token punctuation">]</span> Successfully built image<span class="token string">'192.168.0.20/pig4cloud/demo:latest'</span><span class="token punctuation">[</span>INFO<span class="token punctuation">]</span><span class="token operator">&gt;</span> Pushing image<span class="token string">'192.168.0.20/pig4cloud/demo:latest'</span><span class="token number">100</span><span class="token operator">%</span><span class="token punctuation">[</span>INFO<span class="token punctuation">]</span><span class="token operator">&gt;</span> Pushed image<span class="token string">'192.168.0.20/pig4cloud/demo:latest'</span><span class="token punctuation">[</span>INFO<span class="token punctuation">]</span> BUILD SUCCESS</code></pre> </div> 			                <div class="clearfix"></div>
                <div class="col-md-12 mt-5">
                                        <p>上一个：<a href="/news/article-92086.htm">麦富迪猫粮怎么样 麦富迪猫粮属于什么档次</a></p>
                                        <p>下一个：<a href="/news/article-92802.htm">猫咪不见了会自己回家吗（猫咪不见了会自己回家吗视频）</a></p>
                                    </div>
                                </div>
                <div class="col-md-3">
                    <div class="panel panel-default">
    <div class="panel-heading">
        <h3 class="panel-title">热门文章</h3>
    </div>
    <div class="panel-body">
        <ul class="p-0 x-0" style="list-style: none;margin: 0;padding: 0;">
                        <li class="py-2"><a href="/news/article-75779.htm" title="vue 使用echarts绘制折线图">vue 使用echarts绘制折线图</a></li>
                        <li class="py-2"><a href="/free-nodes/2025-3-27-free-high-speed-nodes.htm" title="VPN试用 | 3月27日18.9M/S|免费VPN/Clash/V2ray/Shadowrocket/SSR免费节点链接地址">VPN试用 | 3月27日18.9M/S|免费VPN/Clash/V2ray/Shadowrocket/SSR免费节点链接地址</a></li>
                        <li class="py-2"><a href="/news/article-70453.htm" title="动物医院好评模板图片大全集（动物医院好评模板图片大全集高清）">动物医院好评模板图片大全集（动物医院好评模板图片大全集高清）</a></li>
                        <li class="py-2"><a href="/free-nodes/2025-4-4-free-v2ray-subscribe.htm" title="VPN试用 | 4月4日20.5M/S|免费VPN/SSR/Shadowrocket/Clash/V2ray免费节点链接地址">VPN试用 | 4月4日20.5M/S|免费VPN/SSR/Shadowrocket/Clash/V2ray免费节点链接地址</a></li>
                        <li class="py-2"><a href="/news/article-71089.htm" title="给猫打疫苗要花多少钱?（给猫打疫苗一般需要多少钱）">给猫打疫苗要花多少钱?（给猫打疫苗一般需要多少钱）</a></li>
                        <li class="py-2"><a href="/news/article-81951.htm" title="Java Map的遍历与排序">Java Map的遍历与排序</a></li>
                        <li class="py-2"><a href="/news/article-80558.htm" title="2022国考公务员报名（2022国考公务员报名考试时间）">2022国考公务员报名（2022国考公务员报名考试时间）</a></li>
                        <li class="py-2"><a href="/news/article-89858.htm" title="动物医院手续流程及费用表（动物医院手续流程及费用表格）">动物医院手续流程及费用表（动物医院手续流程及费用表格）</a></li>
                        <li class="py-2"><a href="/news/article-87668.htm" title="上海宠物领养中心免费领养猫（上海领养猫机构）">上海宠物领养中心免费领养猫（上海领养猫机构）</a></li>
                        <li class="py-2"><a href="/news/article-84805.htm" title="宠物园的宠物携带狂犬病毒（宠物医院内会有狂犬病病毒吗）">宠物园的宠物携带狂犬病毒（宠物医院内会有狂犬病病毒吗）</a></li>
                    </ul>
    </div>
</div>

<div class="panel panel-default">
    <div class="panel-heading">
        <h3 class="panel-title">归纳</h3>
    </div>
    <div class="panel-body">
        <ul class="p-0 x-0" style="list-style: none;margin: 0;padding: 0;">
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">36</span> <a href="/date/2025-04/" title="2025-04 归档">2025-04</a></h4>
            </li>
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">90</span> <a href="/date/2025-03/" title="2025-03 归档">2025-03</a></h4>
            </li>
                    </ul>
    </div>
</div>



                </div>
            </div>
        </div>
    </section>
    <!-- //about section -->
        <!-- footer -->
    <footer class="w3l-footer-22 position-relative mt-5 pt-5">
        
        <!-- copyright -->
        <div class="copyright-footer text-center">
            <div class="container">
                <div class="columns">
                                        <p>
                                                <a href="/">首页</a> |
                                                <a href="/free-nodes/">免费节点</a> |
                                                <a href="/paid-subscribe/">推荐机场</a> |
                                                <a href="/news/">新闻资讯</a> |
                                                <a href="/client.htm">客户端</a> |
                                                <a href="/about-us.htm">关于我们</a> |
                        <a href="/disclaimer.htm">免责申明</a> |
                        <a href="/privacy.htm">隐私申明</a> |
                        <a href="/sitemap.xml">网站地图</a>
                    </p>
                    <p>VPN试用 订阅链接节点官网 版权所有</p>
                    <p>Powered by WordPress</p>
                </div>
            </div>
        </div>
        <!-- //copyright -->
    </footer>
    <!-- //footer -->
    <!-- Js scripts -->
    <!-- move top -->
    <button onclick="topFunction()" id="movetop" title="Go to top">
        <span class="fa fa-level-up" aria-hidden="true"></span>
    </button>
    <script>
    // When the user scrolls down 20px from the top of the document, show the button
    window.onscroll = function() {
        scrollFunction()
    };

    function scrollFunction() {
        if (document.body.scrollTop > 20 || document.documentElement.scrollTop > 20) {
            document.getElementById("movetop").style.display = "block";
        } else {
            document.getElementById("movetop").style.display = "none";
        }
    }

    // When the user clicks on the button, scroll to the top of the document
    function topFunction() {
        document.body.scrollTop = 0;
        document.documentElement.scrollTop = 0;
    }
    </script>
    <!-- //move top -->
    <!-- common jquery plugin -->
    <script src="/assets/website/js/frontend/v2raynode/jquery-3.5.1.min.js"></script>
    <!-- //common jquery plugin -->
    <!-- banner slider -->
    <script src="/assets/website/js/frontend/v2raynode/owl.carousel.js"></script>
    <script>
    $(document).ready(function() {
        $('.owl-one').owlCarousel({
            loop: true,
            margin: 0,
            nav: false,
            responsiveClass: true,
            autoplay: true,
            autoplayTimeout: 5000,
            autoplaySpeed: 1000,
            autoplayHoverPause: false,
            responsive: {
                0: {
                    items: 1,
                    nav: false
                },
                480: {
                    items: 1,
                    nav: false
                },
                667: {
                    items: 1,
                    nav: false
                },
                1000: {
                    items: 1,
                    nav: false
                }
            }
        })
    })
    </script>
    <!-- //banner slider -->
    <!-- counter for stats -->
    <script src="/assets/website/js/frontend/v2raynode/counter.js"></script>
    <!-- //counter for stats -->
    <!-- theme switch js (light and dark)-->
    <script src="/assets/website/js/frontend/v2raynode/theme-change.js"></script>
    <script>
    function autoType(elementClass, typingSpeed) {
        var thhis = $(elementClass);
        thhis.css({
            "position": "relative",
            "display": "inline-block"
        });
        thhis.prepend('<div class="cursor" style="right: initial; left:0;"></div>');
        thhis = thhis.find(".text-js");
        var text = thhis.text().trim().split('');
        var amntOfChars = text.length;
        var newString = "";
        thhis.text("|");
        setTimeout(function() {
            thhis.css("opacity", 1);
            thhis.prev().removeAttr("style");
            thhis.text("");
            for (var i = 0; i < amntOfChars; i++) {
                (function(i, char) {
                    setTimeout(function() {
                        newString += char;
                        thhis.text(newString);
                    }, i * typingSpeed);
                })(i + 1, text[i]);
            }
        }, 1500);
    }

    $(document).ready(function() {
        // Now to start autoTyping just call the autoType function with the 
        // class of outer div
        // The second paramter is the speed between each letter is typed.   
        autoType(".type-js", 200);
    });
    </script>
    <!-- //theme switch js (light and dark)-->
    <!-- MENU-JS -->
    <script>
    $(window).on("scroll", function() {
        var scroll = $(window).scrollTop();

        if (scroll >= 80) {
            $("#site-header").addClass("nav-fixed");
        } else {
            $("#site-header").removeClass("nav-fixed");
        }
    });

    //Main navigation Active Class Add Remove
    $(".navbar-toggler").on("click", function() {
        $("header").toggleClass("active");
    });
    $(document).on("ready", function() {
        if ($(window).width() > 991) {
            $("header").removeClass("active");
        }
        $(window).on("resize", function() {
            if ($(window).width() > 991) {
                $("header").removeClass("active");
            }
        });
    });
    </script>
    <!-- //MENU-JS -->
    <!-- disable body scroll which navbar is in active -->
    <script>
    $(function() {
        $('.navbar-toggler').click(function() {
            $('body').toggleClass('noscroll');
        })
    });
    </script>
    <!-- //disable body scroll which navbar is in active -->
    <!--bootstrap-->
    <script src="/assets/website/js/frontend/v2raynode/bootstrap.min.js"></script>
    <!-- //bootstrap-->
    <!-- //Js scripts -->
    <script src="https://www.freeclashnode.com/assets/js/frontend/invite-url.js"></script>
    <script src="/assets/website/js/frontend/G.js"></script>
</body>

</html>