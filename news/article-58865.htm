<!doctype html>
<html xml:lang="zh-CN" lang="zh-CN">

<head>
        <link rel="canonical" href="https://vpnshiyong.github.io/news/article-58865.htm" />
    <!-- Required meta tags -->
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width, initial-scale=1, maximum-scale=1, user-scalable=no">
    <title>使用 Bitnami PostgreSQL Docker 镜像快速设置流复制集群</title>
    <link rel="icon" href="/assets/website/img/v2raynode/favicon.ico" type="image/x-icon"/>
        <meta name="description" content="bitnami-docker-postgresql 仓库 源码：bitnami-docker-postgresql  https://github.com/bitnami/bitnami-docker" />
    
    <meta name="author" content="VPN试用 订阅链接节点官网">
    <meta property="og:type" content="article" />
    <meta property="og:url" content="https://vpnshiyong.github.io/news/article-58865.htm" />
    <meta property="og:site_name" content="VPN试用 订阅链接节点官网" />
    <meta property="og:title" content="使用 Bitnami PostgreSQL Docker 镜像快速设置流复制集群" />
    <meta property="og:image" content="https://vpnshiyong.github.io/uploads/20240303/1fc085619c1fbd8627f0eb31eff3d01c.webp" />
        <meta property="og:release_date" content="2025-02-18T09:46:48" />
    <meta property="og:updated_time" content="2025-02-18T09:46:48" />
        <meta property="og:description" content="bitnami-docker-postgresql 仓库 源码：bitnami-docker-postgresql  https://github.com/bitnami/bitnami-docker" />
        
    <meta name="applicable-device" content="pc,mobile" />
    <meta name="renderer" content="webkit" />
    <meta name="force-rendering" content="webkit" />
    <meta http-equiv="Cache-Control" content="no-transform" />
    <meta name="robots" content="max-image-preview:large" />
    <meta name="apple-mobile-web-app-capable" content="yes">
    <meta name="apple-mobile-web-app-status-bar-style" content="black">
    <meta name="apple-mobile-web-app-title" content="使用 Bitnami PostgreSQL Docker 镜像快速设置流复制集群">
    <meta name="format-detection" content="telephone=no">

    <link rel="dns-prefetch" href="https:/www.googletagmanager.com">
    <link rel="dns-prefetch" href="https://www.googleadservices.com">
    <link rel="dns-prefetch" href="https://www.google-analytics.com">
    <link rel="dns-prefetch" href="https://pagead2.googlesyndication.com">
    <link rel="dns-prefetch" href="https://cm.g.doubleclick.net">
    <link rel="dns-prefetch" href="https://fonts.googleapis.com">

    <!-- google-fonts -->
    <link href="https://fonts.googleapis.com/css2?family=Montserrat:wght@100;200;300;400;500;600;700;800;900&display=swap" rel="stylesheet">
    <!-- //google-fonts -->
    <!-- Template CSS Style link -->
    <link rel="stylesheet" href="/assets/website/css/v2raynode/style-starter.css">
    <!-- Google tag (gtag.js) -->
<script async src="https://www.googletagmanager.com/gtag/js?id=G-GE2TTTPE1T"></script>
<script>
  window.dataLayer = window.dataLayer || [];
  function gtag(){dataLayer.push(arguments);}
  gtag('js', new Date());

  gtag('config', 'G-GE2TTTPE1T');
</script>
    <script async src="https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js?client=ca-pub-3332997411212854"
     crossorigin="anonymous"></script>
</head>

<body data-page="detail">
    <!--header-->
    <header id="site-header" class="fixed-top">
        <div class="container-fluid">
            <nav class="navbar navbar-expand-lg stroke">
                <a class="navbar-brand d-flex align-items-center" href="/">
                                    <span>VPN试用</span>
                                </a>

                <button class="navbar-toggler  collapsed bg-gradient" type="button" data-toggle="collapse" data-target="#navbarTogglerDemo02" aria-controls="navbarTogglerDemo02" aria-expanded="false" aria-label="Toggle navigation">
                    <span class="navbar-toggler-icon fa icon-expand fa-bars"></span>
                    <span class="navbar-toggler-icon fa icon-close fa-times"></span>
                </button>
                <div class="collapse navbar-collapse" id="navbarTogglerDemo02">
                    <ul class="navbar-nav ml-lg-auto">
                                                <li class="nav-item">
                            <a class="nav-link" href="/">首页</a>
                        </li>
                                                <li class="nav-item">
                            <a class="nav-link" href="/free-nodes/">免费节点</a>
                        </li>
                                                <li class="nav-item">
                            <a class="nav-link" href="/paid-subscribe/">推荐机场</a>
                        </li>
                                                <li class="nav-item">
                            <a class="nav-link" href="/news/">新闻资讯</a>
                        </li>
                                                <li class="nav-item">
                            <a class="nav-link" href="/client.htm">客户端</a>
                        </li>
                                            </ul>
                </div>
                <!-- toggle switch for light and dark theme -->
                <div class="cont-ser-position">
                    <nav class="navigation">
                        <div class="theme-switch-wrapper">
                            <label class="theme-switch" for="checkbox">
                                <input type="checkbox" id="checkbox">
                                <div class="mode-container">
                                    <i class="gg-sun"></i>
                                    <i class="gg-moon"></i>
                                </div>
                            </label>
                        </div>
                    </nav>
                </div>
                <!-- //toggle switch for light and dark theme -->
            </nav>
        </div>
    </header>
    <!--//header-->
    <!-- inner banner -->
    <div class="inner-banner">
        <section class="w3l-breadcrumb">
            <div class="container">
                <h1 class="inner-text-title font-weight-bold text-white mb-sm-3 mb-2" style="line-height: 3rem;word-break: break-all;">使用 Bitnami PostgreSQL Docker 镜像快速设置流复制集群</h1>
                <ul class="breadcrumbs-custom-path">
                    <li><a href="/">首页</a></li>
                    <li><span class="fa fa-chevron-right mx-2" aria-hidden="true"></span><a href="/news/">新闻资讯</a></li>
                    <li class="active"><span class="fa fa-chevron-right mx-2" aria-hidden="true"></span>正文</li>
                </ul>
            </div>
        </section>
    </div>
    <!-- //inner banner -->
    <!-- about section -->
    <section class="video-section py-5">
        <div class="container py-md-5 py-4">
            <div class="row">
                <div class="col-md-9">
                                    <input type="hidden" id="share-website-info" data-name="Clash Node官网订阅站" data-url="https://clashnode.github.io">
                  				  				  				<p><img decoding="async" src="http://img.555519.xyz/uploads3/20220509/d4f4fa28795fc6ca740cba32a590781c.jpg" alt="使用 Bitnami PostgreSQL Docker 镜像快速设置流复制集群"></p> <h2 id="bitnami-docker-postgresql-仓库">bitnami-docker-postgresql 仓库</h2> <p>源码：<a href="http://www.m6000.cn/wp-content/themes/begin%20lts/inc/go.php?url=https://github.com/bitnami/bitnami-docker-postgresql"  target="_blank" rel="nofollow">bitnami-docker-postgresql</a></p> <ul> <li><small><a href="http://www.m6000.cn/wp-content/themes/begin%20lts/inc/go.php?url=https://github.com/bitnami/bitnami-docker-postgresql"  target="_blank" rel="nofollow">https://github.com/bitnami/bitnami-docker-postgresql</a></small></li> </ul> <h2 id="流复制相关环境变量">流复制相关环境变量</h2> <p>使用以下环境变量，可以使用<code>Bitnami PostgreSQL Docker 镜像</code> 轻松设置<a href="http://www.m6000.cn/wp-content/themes/begin%20lts/inc/go.php?url=http://www.postgresql.org/docs/9.4/static/warm-standby.html#STREAMING-REPLICATION"  target="_blank" rel="nofollow">流复制</a>集群：</p> <ul> <li><code>POSTGRESQL_REPLICATION_MODE</code>: replication 模式。可能的值<code>master</code>/<code>slave</code>。没有默认值。</li> <li><code>POSTGRESQL_REPLICATION_USER</code>: 首次运行时在主服务器上创建的 replication 用户。没有默认值。</li> <li><code>POSTGRESQL_REPLICATION_PASSWORD</code>: replication 用户密码。 没有默认值。</li> <li><code>POSTGRESQL_REPLICATION_PASSWORD_FILE</code>: 包含 replication 用户密码的文件的路径。这将覆盖<code>POSTGRESQL_REPLICATION_PASSWORD</code> 中指定的值。没有默认值。</li> <li><code>POSTGRESQL_MASTER_HOST</code>: replication master（slave 参数）Hostname/IP。没有默认值。</li> <li><code>POSTGRESQL_MASTER_PORT_NUMBER</code>: replication master 的服务器端口（slave 参数）。默认是<code>5432</code>。</li> </ul> <p>在<code>复制(replication)</code>集群中，您可以拥有一个<code>主(master)</code>服务器和零个或多个<code>从(slave)</code>服务器。 启用复制后，<code>master</code> 节点处于读写模式，而<code>slave</code> 节点处于只读模式。 为了获得最佳性能，建议将读取限制在<code>slave</code> 上。</p> <ul> <li><small><a href="http://www.m6000.cn/wp-content/themes/begin%20lts/inc/go.php?url=http://www.postgresql.org/docs/9.4/static/warm-standby.html#STREAMING-REPLICATION"  target="_blank" rel="nofollow">http://www.postgresql.org/docs/9.4/static/warm-standby.html#STREAMING-REPLICATION</a></small></li> </ul> <h2 id="第-1-步创建-replication-master">第 1 步：创建 replication master</h2> <p>第一步是启动 master。</p> <pre><code class="language-console">$ docker run --name postgresql-master \   -e POSTGRESQL_REPLICATION_MODE=master \   -e POSTGRESQL_USERNAME=my_user \   -e POSTGRESQL_PASSWORD=password123 \   -e POSTGRESQL_DATABASE=my_database \   -e POSTGRESQL_REPLICATION_USER=my_repl_user \   -e POSTGRESQL_REPLICATION_PASSWORD=my_repl_password \   bitnami/postgresql:latest</code></pre> <p>在此命令中，我们使用<code>POSTGRESQL_REPLICATION_MODE=master</code> 参数将容器配置为<code>master</code> 容器。使用<code>POSTGRESQL_REPLICATION_USER</code> 和<code>POSTGRESQL_REPLICATION_PASSWORD</code> 参数指定<code>replication</code> 用户。</p> <h2 id="步骤-2创建-replication-slave">步骤 2：创建 replication slave</h2> <p>接下来我们启动一个<code>replication slave</code> 容器。</p> <pre><code class="language-console">$ docker run --name postgresql-slave \   --link postgresql-master:master \   -e POSTGRESQL_REPLICATION_MODE=slave \   -e POSTGRESQL_MASTER_HOST=master \   -e POSTGRESQL_MASTER_PORT_NUMBER=5432 \   -e POSTGRESQL_REPLICATION_USER=my_repl_user \   -e POSTGRESQL_REPLICATION_PASSWORD=my_repl_password \   bitnami/postgresql:latest</code></pre> <p>在上面的命令中，使用<code>POSTGRESQL_REPLICATION_MODE</code> 参数将容器配置为<code>slave</code>。 在<code>replication slave</code> 启动之前，<code>slave</code> 容器使用<code>POSTGRESQL_MASTER_HOST</code> 和<code>POSTGRESQL_MASTER_PORT_NUMBER</code> 参数连接到<code>master</code> 并从<code>master</code> 复制初始数据库。<code>POSTGRESQL_REPLICATION_USER</code> 和<code>POSTGRESQL_REPLICATION_PASSWORD</code> 凭证用于向<code>master</code> 进行身份验证。为了改变<code>pg_hba.conf</code> 的默认设置，<code>slave</code> 需要知道是否设置了<code>POSTGRESQL_PASSWORD</code>。</p> <p>使用这两个命令，您现在可以启动并运行一个两节点<code>PostgreSQL</code> 主从(<code>master-slave</code>)流复制集群。 您可以通过添加/删除<code>从(slave)</code>服务器来扩展集群，而不会导致任何停机。</p> <blockquote> <p><strong>Note</strong>: 集群完整地复制 master 服务器，包括所有用户和数据库。</p> </blockquote> <p>如果<code>master</code> 服务器宕机，您可以重新配置一个<code>slave</code> 服务器作为<code>master</code> 服务器并通过创建触发器文件<code>/tmp/postgresql.trigger.5432</code> 开始接受写入。例如，以下命令将<code>postgresql-slave</code> 重新配置为<code>master</code> 服务器：</p> <pre><code class="language-console">$ docker exec postgresql-slave touch /tmp/postgresql.trigger.5432</code></pre> <blockquote> <p><strong>Note</strong>: 需要更新集群中其他<code>slave</code> 服务器的配置，以便他们知道新的<code>master</code> 服务器。这将要求您根据我们的示例使用<code>--link postgresql-slave:master</code> 重新启动其他<code>slave</code> 服务器。</p> </blockquote> <p>使用<code>Docker Compose</code>，可以使用以下方式设置主从复制：</p> <pre><code class="language-yaml">version: '2'  services:   postgresql-master:     image: 'bitnami/postgresql:latest'     ports:       - '5432'     volumes:       - 'postgresql_master_data:/bitnami/postgresql'     environment:       - POSTGRESQL_REPLICATION_MODE=master       - POSTGRESQL_REPLICATION_USER=repl_user       - POSTGRESQL_REPLICATION_PASSWORD=repl_password       - POSTGRESQL_USERNAME=my_user       - POSTGRESQL_PASSWORD=my_password       - POSTGRESQL_DATABASE=my_database   postgresql-slave:     image: 'bitnami/postgresql:latest'     ports:       - '5432'     depends_on:       - postgresql-master     environment:       - POSTGRESQL_REPLICATION_MODE=slave       - POSTGRESQL_REPLICATION_USER=repl_user       - POSTGRESQL_REPLICATION_PASSWORD=repl_password       - POSTGRESQL_MASTER_HOST=postgresql-master       - POSTGRESQL_PASSWORD=my_password       - POSTGRESQL_MASTER_PORT_NUMBER=5432  volumes:   postgresql_master_data:</code></pre> <p>使用以下方法缩放<code>slave</code> 的数量：</p> <pre><code class="language-console">$ docker-compose up --detach --scale postgresql-master=1 --scale postgresql-slave=3</code></pre> <p>上面的命令将<code>slave</code> 的数量增加到<code>3</code>。你可以用同样的方法缩小。</p> <blockquote> <p><strong>Note</strong>: 您不应该扩大/缩小主节点的数量。始终只运行一个主节点。</p> </blockquote> <h2 id="同步提交">同步提交</h2> <p>默认情况下，<code>slave</code> 实例配置为异步复制。为了保证更高的数据稳定性（以牺牲一些性能为代价），可以使用以下环境变量设置同步提交（即，在将事务提交写入一组副本之前，事务提交不会将成功返回给客户端）。</p> <ul> <li><code>POSTGRESQL_SYNCHRONOUS_COMMIT_MODE</code>: 建立同步提交的类型。可用选项有：<code>on</code>、<code>remote_apply</code>、<code>remote_write</code>、<code>local</code> 和<code>off</code>。 默认值为<code>on</code>。有关更多信息，请查看<a href="http://www.m6000.cn/wp-content/themes/begin%20lts/inc/go.php?url=https://www.postgresql.org/docs/9.6/runtime-config-wal.html#GUC-SYNCHRONOUS-COMMIT"  target="_blank" rel="nofollow">官方 PostgreSQL 文档</a>。 <ul> <li><small><a href="http://www.m6000.cn/wp-content/themes/begin%20lts/inc/go.php?url=https://www.postgresql.org/docs/9.6/runtime-config-wal.html#GUC-SYNCHRONOUS-COMMIT"  target="_blank" rel="nofollow">https://www.postgresql.org/docs/9.6/runtime-config-wal.html#GUC-SYNCHRONOUS-COMMIT</a></small></li> </ul> </li> <li><code>POSTGRESQL_NUM_SYNCHRONOUS_REPLICAS</code>: 确定将启用同步复制的副本数。此数量不得超过您在集群中配置的<code>slave</code> 的数量。</li> </ul> <p>使用<code>Docker Compose</code>，可以按如下方式设置带有同步提交的主从复制：</p> <pre><code class="language-yaml">version: '2'  services:   postgresql-master:     image: 'bitnami/postgresql:latest'     ports:       - '5432'     volumes:       - 'postgresql_master_data:/bitnami/postgresql'     environment:       - POSTGRESQL_REPLICATION_MODE=master       - POSTGRESQL_REPLICATION_USER=repl_user       - POSTGRESQL_REPLICATION_PASSWORD=repl_password       - POSTGRESQL_USERNAME=my_user       - POSTGRESQL_PASSWORD=my_password       - POSTGRESQL_DATABASE=my_database       - POSTGRESQL_SYNCHRONOUS_COMMIT_MODE=on       - POSTGRESQL_NUM_SYNCHRONOUS_REPLICAS=1     volumes:       - '/path/to/postgresql-persistence:/bitnami/postgresql'   postgresql-slave:     image: 'bitnami/postgresql:latest'     ports:       - '5432'     depends_on:       - postgresql-master     environment:       - POSTGRESQL_REPLICATION_MODE=slave       - POSTGRESQL_REPLICATION_USER=repl_user       - POSTGRESQL_REPLICATION_PASSWORD=repl_password       - POSTGRESQL_MASTER_HOST=postgresql-master       - POSTGRESQL_MASTER_PORT_NUMBER=5432   postgresql-slave2:     image: 'bitnami/postgresql:latest'     ports:       - '5432'     depends_on:       - postgresql-master     environment:       - POSTGRESQL_REPLICATION_MODE=slave       - POSTGRESQL_REPLICATION_USER=repl_user       - POSTGRESQL_REPLICATION_PASSWORD=repl_password       - POSTGRESQL_MASTER_HOST=postgresql-master       - POSTGRESQL_MASTER_PORT_NUMBER=5432</code></pre> <p>在上面的示例中，提交需要同时写入主服务器和其中一个从服务器才能被接受。另一个<code>slave</code> 将继续使用异步复制。使用以下<code>SQL</code> 查询对其进行检查：</p> <pre><code class="language-console">postgres=# select application_name as server, state, postgres-#       sync_priority as priority, sync_state postgres-#       from pg_stat_replication; | server      | state     | priority | sync_state | |-------------|-----------|----------|------------| | walreceiver | streaming | 0        | sync       | | walreceiver | streaming | 0        | async      |</code></pre> <blockquote> <p><strong>Note:</strong> 对于更高级的设置，您可以通过设置<code>POSTGRESQL_CLUSTER_APP_NAME</code> 环境变量，使用<code>application_name</code> 参数定义不同的复制组。</p> </blockquote> <h2 id="更多">更多</h2> <ul> <li><a href="http://www.m6000.cn/wp-content/themes/begin%20lts/inc/go.php?url=https://mp.weixin.qq.com/s/Hbs5YQ2oKcnMKHzVWrp4Tw"  target="_blank" rel="nofollow">Pgpool-II 4.3 中文手册-前言</a></li> <li><a href="http://www.m6000.cn/wp-content/themes/begin%20lts/inc/go.php?url=https://mp.weixin.qq.com/s/a1l51jpMR_ObQwmGAdI8-w"  target="_blank" rel="nofollow">pgpool-II 4.3 中文手册 - 入门教程</a></li> <li><a href="http://www.m6000.cn/wp-content/themes/begin%20lts/inc/go.php?url=https://mp.weixin.qq.com/s/1X65AAs8O1qcddf5wqpRRQ"  target="_blank" rel="nofollow">「在 Kubernetes 上运行 Pgpool-Il」实现 PostgreSQL 查询(读)负载均衡和连接池</a></li> </ul> 			                <div class="clearfix"></div>
                <div class="col-md-12 mt-5">
                                        <p>上一个：<a href="/news/article-58863.htm">Python 3.10 的一些新特性</a></p>
                                        <p>下一个：<a href="/news/article-59384.htm">聊城宠物狗服装厂家（聊城宠物狗商家）</a></p>
                                    </div>
                                </div>
                <div class="col-md-3">
                    <div class="panel panel-default">
    <div class="panel-heading">
        <h3 class="panel-title">热门文章</h3>
    </div>
    <div class="panel-body">
        <ul class="p-0 x-0" style="list-style: none;margin: 0;padding: 0;">
                        <li class="py-2"><a href="/news/article-58236.htm" title="动物免疫接种应注意什么问题 动物免疫接种应注意什么问题呢">动物免疫接种应注意什么问题 动物免疫接种应注意什么问题呢</a></li>
                        <li class="py-2"><a href="/free-nodes/2025-2-13-free-node-subscribe-links.htm" title="VPN试用 | 2月13日20.1M/S|免费VPN/V2ray/SSR/Clash/Shadowrocket免费节点链接地址">VPN试用 | 2月13日20.1M/S|免费VPN/V2ray/SSR/Clash/Shadowrocket免费节点链接地址</a></li>
                        <li class="py-2"><a href="/news/article-58865.htm" title="使用 Bitnami PostgreSQL Docker 镜像快速设置流复制集群">使用 Bitnami PostgreSQL Docker 镜像快速设置流复制集群</a></li>
                        <li class="py-2"><a href="/news/article-57106.htm" title="动物疫苗接种时间表格图 动物疫苗接种时间表格图片">动物疫苗接种时间表格图 动物疫苗接种时间表格图片</a></li>
                        <li class="py-2"><a href="/news/article-56546.htm" title="成都宠物托运公司哪家比较好一点（成都宠物物流公司）">成都宠物托运公司哪家比较好一点（成都宠物物流公司）</a></li>
                        <li class="py-2"><a href="/free-nodes/2025-2-12-node-share.htm" title="VPN试用 | 2月12日20.9M/S|免费VPN/SSR/V2ray/Shadowrocket/Clash免费节点链接地址">VPN试用 | 2月12日20.9M/S|免费VPN/SSR/V2ray/Shadowrocket/Clash免费节点链接地址</a></li>
                        <li class="py-2"><a href="/news/article-55995.htm" title="三国杀武将时间顺序表（三国杀武将大全2020）">三国杀武将时间顺序表（三国杀武将大全2020）</a></li>
                        <li class="py-2"><a href="/news/article-57670.htm" title="动物疫苗上市公司有哪些股票（动物疫苗行业龙头）">动物疫苗上市公司有哪些股票（动物疫苗行业龙头）</a></li>
                        <li class="py-2"><a href="/news/article-55439.htm" title="动物疫苗销售许可证如何办理手续流程视频（动物疫苗审批流程）">动物疫苗销售许可证如何办理手续流程视频（动物疫苗审批流程）</a></li>
                        <li class="py-2"><a href="/news/article-59385.htm" title="滕州市旅游景点有哪些好玩的(滕州市旅游景点有哪些地方)">滕州市旅游景点有哪些好玩的(滕州市旅游景点有哪些地方)</a></li>
                    </ul>
    </div>
</div>

<div class="panel panel-default">
    <div class="panel-heading">
        <h3 class="panel-title">归纳</h3>
    </div>
    <div class="panel-body">
        <ul class="p-0 x-0" style="list-style: none;margin: 0;padding: 0;">
                        <li class="py-2">
                <h4><span class="badge" style="float: right;">30</span> <a href="/date/2025-02/" title="2025-02 归档">2025-02</a></h4>
            </li>
                    </ul>
    </div>
</div>



                </div>
            </div>
        </div>
    </section>
    <!-- //about section -->
        <!-- footer -->
    <footer class="w3l-footer-22 position-relative mt-5 pt-5">
        
        <!-- copyright -->
        <div class="copyright-footer text-center">
            <div class="container">
                <div class="columns">
                            <p>
                                <a href="/">首页</a> | 
                                <a href="/free-node/">免费节点</a> | 
                                <a href="/news/">新闻资讯</a> |
                                <a href="/about-us.htm">关于我们</a> |
                                <a href="/disclaimer.htm">免责申明</a> |
                                <a href="/privacy.htm">隐私申明</a> |
                                <a href="/sitemap.xml">网站地图</a>
                            </p>
                    <p>VPN试用 订阅链接节点官网 版权所有</p>
                    <p>Powered by WordPress</p>
                </div>
            </div>
        </div>
        <!-- //copyright -->
    </footer>
    <!-- //footer -->
    <!-- Js scripts -->
    <!-- move top -->
    <button onclick="topFunction()" id="movetop" title="Go to top">
        <span class="fa fa-level-up" aria-hidden="true"></span>
    </button>
    <script>
    // When the user scrolls down 20px from the top of the document, show the button
    window.onscroll = function() {
        scrollFunction()
    };

    function scrollFunction() {
        if (document.body.scrollTop > 20 || document.documentElement.scrollTop > 20) {
            document.getElementById("movetop").style.display = "block";
        } else {
            document.getElementById("movetop").style.display = "none";
        }
    }

    // When the user clicks on the button, scroll to the top of the document
    function topFunction() {
        document.body.scrollTop = 0;
        document.documentElement.scrollTop = 0;
    }
    </script>
    <!-- //move top -->
    <!-- common jquery plugin -->
    <script src="/assets/website/js/frontend/v2raynode/jquery-3.5.1.min.js"></script>
    <!-- //common jquery plugin -->
    <!-- banner slider -->
    <script src="/assets/website/js/frontend/v2raynode/owl.carousel.js"></script>
    <script>
    $(document).ready(function() {
        $('.owl-one').owlCarousel({
            loop: true,
            margin: 0,
            nav: false,
            responsiveClass: true,
            autoplay: true,
            autoplayTimeout: 5000,
            autoplaySpeed: 1000,
            autoplayHoverPause: false,
            responsive: {
                0: {
                    items: 1,
                    nav: false
                },
                480: {
                    items: 1,
                    nav: false
                },
                667: {
                    items: 1,
                    nav: false
                },
                1000: {
                    items: 1,
                    nav: false
                }
            }
        })
    })
    </script>
    <!-- //banner slider -->
    <!-- counter for stats -->
    <script src="/assets/website/js/frontend/v2raynode/counter.js"></script>
    <!-- //counter for stats -->
    <!-- theme switch js (light and dark)-->
    <script src="/assets/website/js/frontend/v2raynode/theme-change.js"></script>
    <script>
    function autoType(elementClass, typingSpeed) {
        var thhis = $(elementClass);
        thhis.css({
            "position": "relative",
            "display": "inline-block"
        });
        thhis.prepend('<div class="cursor" style="right: initial; left:0;"></div>');
        thhis = thhis.find(".text-js");
        var text = thhis.text().trim().split('');
        var amntOfChars = text.length;
        var newString = "";
        thhis.text("|");
        setTimeout(function() {
            thhis.css("opacity", 1);
            thhis.prev().removeAttr("style");
            thhis.text("");
            for (var i = 0; i < amntOfChars; i++) {
                (function(i, char) {
                    setTimeout(function() {
                        newString += char;
                        thhis.text(newString);
                    }, i * typingSpeed);
                })(i + 1, text[i]);
            }
        }, 1500);
    }

    $(document).ready(function() {
        // Now to start autoTyping just call the autoType function with the 
        // class of outer div
        // The second paramter is the speed between each letter is typed.   
        autoType(".type-js", 200);
    });
    </script>
    <!-- //theme switch js (light and dark)-->
    <!-- MENU-JS -->
    <script>
    $(window).on("scroll", function() {
        var scroll = $(window).scrollTop();

        if (scroll >= 80) {
            $("#site-header").addClass("nav-fixed");
        } else {
            $("#site-header").removeClass("nav-fixed");
        }
    });

    //Main navigation Active Class Add Remove
    $(".navbar-toggler").on("click", function() {
        $("header").toggleClass("active");
    });
    $(document).on("ready", function() {
        if ($(window).width() > 991) {
            $("header").removeClass("active");
        }
        $(window).on("resize", function() {
            if ($(window).width() > 991) {
                $("header").removeClass("active");
            }
        });
    });
    </script>
    <!-- //MENU-JS -->
    <!-- disable body scroll which navbar is in active -->
    <script>
    $(function() {
        $('.navbar-toggler').click(function() {
            $('body').toggleClass('noscroll');
        })
    });
    </script>
    <!-- //disable body scroll which navbar is in active -->
    <!--bootstrap-->
    <script src="/assets/website/js/frontend/v2raynode/bootstrap.min.js"></script>
    <!-- //bootstrap-->
    <!-- //Js scripts -->
    <script src="https://www.freeclashnode.com/assets/js/frontend/invite-url.js"></script>
    <script src="/assets/website/js/frontend/G.js"></script>
</body>

</html>